
///////////////////////////////////////////////////////////////////////////////////////////////
//
// Библиотека для  OneScript реализующая рабту с API Telegram
//
// (с) Квит Леонид Анатолиевич
//
///////////////////////////////////////////////////////////////////////////////////////////////
// Описание Telegram Bot API https://core.telegram.org/bots/api
//
// Product backlog:
//
// 2. Переделать метод ОтправитьФайл. Сейчас реализовано для платформы 8.2. 
//		нужно использовать новые возможность как в ОтправитьМатериал

#Использовать json

///////////////////////////////////////////////////////////////////////////////////////////////
// Программный интерфейс
///////////////////////////////////////////////////////////////////////////////////////////////

Перем Сервер; 
Перем Токен;
Перем НомерАпдейта;
Перем Эмоджи;

// Получает обновления с сервера api.telegram.org
//
Процедура ПолучитьUpdate(Бот = Неопределено)Экспорт
	
	Соединение = Новый HTTPСоединение(Сервер, 443, ,,, , Новый ЗащищенноеСоединениеOpenSSL());
	
	Ресурс = СтрШаблон("bot%1/getUpdates", Токен);
	
	Попытка
		Запрос = Новый HTTPЗапрос(Ресурс);
		Ответ = Соединение.Получить(Запрос);
		ТекстовыеДанныеОтвета = Ответ.ПолучитьТелоКакСтроку();
		
		ЧтениеJSON = Новый ПарсерJSON;
		Результат = ЧтениеJSON.ПрочитатьJSON(ТекстовыеДанныеОтвета);
		ЧтениеJSON.Закрыть();
	Исключение
		Сообщить("Чтение сообщений ботов " + ОписаниеОшибки());
	КонецПопытки;
	
	Если НЕ Результат["ok"] Тогда
		Сообщить("Чтение сообщений ботов. Что-то пошло не так...");
	КонецЕсли;
	
	getUpdatesОбработкаОтвета(Результат);

КонецПроцедуры

// Обрабатывает ответ полученный от api.telegram.org
// на запрос getUpdates
Процедура getUpdatesОбработкаОтвета(Результат)
	
	Запись = Новый Структура("message_id,chat_id,МоментВремени,first_name,ТекстСообщения,ТипСообщения");
	СписокЗапросов = Результат.result;
	Для каждого Запрос Из СписокЗапросов Цикл
				
		Если Запрос.Свойство("callback_query") Тогда
			
			Сообщение = Запрос.callback_query;
			Отправитель = Сообщение.from;	// У callback_query всегда есть отправитель
			
			Запись.message_id = Сообщение.id;
			Запись.chat_id = Сообщение.message.chat.id;
			Запись.МоментВремени = ТекущаяДата();
			Запись.first_name = Отправитель.first_name;
			Запись.ТекстСообщения = Сообщение.data;
			Запись.ТипСообщения = "callback_query";
			
		ИначеЕсли Запрос.Свойство("message") Тогда
			
			Сообщение = Запрос.message;
			
			Запись.message_id = Сообщение.message_id;
			Запись.chat_id = Сообщение.chat.id;
			Запись.МоментВремени = Сообщение.date;
			Если Сообщение.Свойство("from") Тогда
				Отправитель = Сообщение.from;
				Запись.first_name = Отправитель.first_name;
			КонецЕсли;
			Если Сообщение.Свойство("location") Тогда
				Запись.ТипСообщения = "location";
			ИначеЕсли Сообщение.Свойство("contact") Тогда
				contact = Сообщение.contact;
				Запись.ТипСообщения = "contact";
				Запись.ТекстСообщения = contact.phone_number;
			ИначеЕсли Сообщение.Свойство("text") Тогда
				Запись.ТипСообщения = "message";
				Запись.ТекстСообщения = Сообщение.text;
			КонецЕсли;
		Иначе
			// Надо отметить, что бывают и апдейты, которые не подпадают под условия выше. Например, добавление бота в чат генерит сообщение.
			// Если вам надо их фиксировать и обрабатывать, тут допишите свои обработчики.
		КонецЕсли;
		
	КонецЦикла; 
	
	Если СписокЗапросов.Количество() Тогда
		НомерАпдейта = Запрос.update_id;
	КонецЕсли;
	
КонецПроцедуры

Функция ПреобразоватьвСистему(Число10,система) Экспорт
 
    Если система > 36 или система < 2 тогда
        Сообщить("Выбранная система исчисления не поддерживается");
        Возврат -1;
    КонецЕсли;
 
    СтрокаЗначений = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    СтрокаСистема = "";
    Пока Число10 > 0 цикл
        РезДеления = Число10/система;
        ЧислоСистема = цел(РезДеления);
        остатокОтДеления = Число10 - система*(ЧислоСистема);
        СтрокаСистема = сред(СтрокаЗначений,остатокОтДеления+1,1)+ СтрокаСистема;
        Число10 = ?(ЧислоСистема=0,0,РезДеления); 
    КонецЦикла;
 
    Нечётное = стрДлина(СтрокаСистема) - цел(стрДлина(СтрокаСистема)/2)*2;
    Если Нечётное тогда
        СтрокаСистема = "0"+СтрокаСистема;
    КонецЕсли;
 
    Возврат СтрокаСистема;
 
КонецФункции

Функция URLEncode(стр) Экспорт  
 
    Длина=СтрДлина(Стр);
    Итог="";
    Для Н=1 По Длина Цикл
        Знак=Сред(Стр,Н,1);
        Код=КодСимвола(Знак);
 
        если ((Знак>="a")и(Знак<="z")) или
             ((Знак>="A")и(Знак<="Z")) или
             ((Знак>="0")и(Знак<="9")) тогда
            Итог=Итог+Знак;
        Иначе
            Если (Код>=КодСимвола("А"))И(Код<=КодСимвола("п")) Тогда
                Итог=Итог+"%"+ПреобразоватьвСистему(208,16)+"%"+ПреобразоватьвСистему(144+Код-КодСимвола("А"),16);
            ИначеЕсли (Код>=КодСимвола("р"))И(Код<=КодСимвола("я")) Тогда
                Итог=Итог+"%"+ПреобразоватьвСистему(209,16)+"%"+ПреобразоватьвСистему(128+Код-КодСимвола("р"),16);
            ИначеЕсли (Знак="ё") Тогда
                Итог=Итог+"%"+ПреобразоватьвСистему(209,16)+"%"+ПреобразоватьвСистему(145,16);
            ИначеЕсли (Знак="Ё") Тогда
                Итог=Итог+"%"+ПреобразоватьвСистему(208,16)+"%"+ПреобразоватьвСистему(129,16);
            Иначе
                Итог=Итог+"%"+ПреобразоватьвСистему(Код,16);
            КонецЕсли;
        КонецЕсли;
    КонецЦикла;
    Возврат Итог;
 
КонецФункции

Сервер = "api.telegram.org";

Эмоджи = Новый Структура;
Эмоджи.Вставить("thumbsup", URLEncode("\uD83D\uDC4D")); 
Эмоджи.Вставить("smilingface", URLEncode("\uD83D\uDE03"));
Эмоджи.Вставить("whiteheavycheckmark", URLEncode("\u2705"));
Эмоджи.Вставить("envelope", URLEncode("\u2709"));
Эмоджи.Вставить("smiling", URLEncode("\uD83D\uDE0A"));
Эмоджи.Вставить("star", URLEncode("\u2B50"));
Эмоджи.Вставить("telephone", URLEncode("\uD83D\uDCDE"));
Эмоджи.Вставить("atm", URLEncode("\uD83C\uDFE7"));
Эмоджи.Вставить("exchange", URLEncode("\uD83D\uDCB1"));
Эмоджи.Вставить("charttrend", URLEncode("\uD83D\uDCC8"));
Эмоджи.Вставить("paperclip", URLEncode("\uD83D\uDCCE"));
Эмоджи.Вставить("clock", URLEncode("\uD83D\uDD52"));
Эмоджи.Вставить("calendar", URLEncode("\uD83D\uDCC5"));
Эмоджи.Вставить("banknoteusd", URLEncode("\uD83D\uDCB5"));
Эмоджи.Вставить("banknoteeuro", URLEncode("\uD83D\uDCB6"));
Эмоджи.Вставить("ok", URLEncode("\uD83D\uDC4C"));
Эмоджи.Вставить("idea", URLEncode("\uD83D\uDCA1"));
Эмоджи.Вставить("video", URLEncode("\uD83D\uDCF9"));
Эмоджи.Вставить("camera", URLEncode("\uD83D\uDCF7"));
Эмоджи.Вставить("globe_with_meridians", URLEncode("\uD83C\uDF10"));
Эмоджи.Вставить("couple", URLEncode("\uD83D\uDC6B"));
Эмоджи.Вставить("interrobang", URLEncode("\u2049"));
Эмоджи.Вставить("headphones", URLEncode("\uD83C\uDFA7"));
Эмоджи.Вставить("heavylatincross", URLEncode("\uD83D\uDD47"));
Эмоджи.Вставить("worldmap", URLEncode("\uD83D\uDDFA"));
Эмоджи.Вставить("info", URLEncode("\u2139"));